{"version":3,"sources":["../../src/test/functional.js"],"names":[],"mappings":"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","file":"functional.js","sourcesContent":["import assert from 'assert'\r\nimport rsvp from 'rsvp'\r\n\r\nimport WGraph from '../wgraph'\r\n\r\nit('Functionnal test', done => {\r\n\r\n  let saveFixtures = () => {\r\n\r\n    let briceKnowsArnaud = brice.rel('knows', arnaud)\r\n    let arnaudKnowsBrice = arnaud.rel('knows', brice)\r\n\r\n    let q = []\r\n\r\n    q.push(brice.props.set({age: 28, sex: 'male', job: 'CTO'}))\r\n    q.push(arnaud.props.set({age: 21, sex: 'male', job: 'dev'}))\r\n\r\n    q.push(briceKnowsArnaud.props.set('since', '2015/11/01'))\r\n    q.push(arnaudKnowsBrice.props.set({since: '2015/11/10', supervisor: true}))\r\n\r\n    q.push(brice.save())\r\n    q.push(arnaud.save())\r\n\r\n    return rsvp.all(q)\r\n  }\r\n\r\n  let loadFixtures = () => {\r\n    return rsvp.all([\r\n      graph.node('brice').load(),\r\n      graph.node('arnaud').load()\r\n    ]).then(nodes => {\r\n      return rsvp.all([\r\n        nodes[0].props.map(), // brice properties\r\n        nodes[1].props.map(), // arnaud properties\r\n        nodes[0].edges['knows:arnaud'].props.map(), // brice->arnaud properties\r\n        nodes[1].edges['knows:brice'].props.map(), // arnaud->brice properties\r\n      ])\r\n    })\r\n  }\r\n\r\n  let graph = new WGraph(__dirname + '/fgraph')\r\n\r\n  let brice = graph.node('brice')\r\n  let arnaud = graph.node('arnaud')\r\n\r\n  graph\r\n    .del()\r\n    .then(() => {\r\n      return rsvp.all([brice.del(), arnaud.del()])\r\n    })\r\n    .then(() => {\r\n      return saveFixtures()\r\n    })\r\n    .then(() => {\r\n      return loadFixtures()\r\n    })\r\n    .then(data => {\r\n      let briceProps = data.shift()\r\n      let arnaudProps = data.shift()\r\n      let briceKnowsArnaudProps = data.shift()\r\n      let arnaudKnowsBriceProps = data.shift()\r\n      assert.deepEqual(briceProps, {age: 28, sex: 'male', job: 'CTO'})\r\n      assert.deepEqual(arnaudProps, {age: 21, sex: 'male', job: 'dev'})\r\n      assert.deepEqual(briceKnowsArnaudProps, {since: '2015/11/01'})\r\n      assert.deepEqual(arnaudKnowsBriceProps, {since: '2015/11/10', supervisor: true})\r\n      done()\r\n    }).catch(done)\r\n\r\n})\r\n"]}