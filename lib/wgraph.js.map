{"version":3,"sources":["../src/wgraph.js"],"names":[],"mappings":"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","file":"wgraph.js","sourcesContent":["\nimport levelup from 'levelup'\nimport levelgraph from 'levelgraph'\nimport rsvp from 'rsvp'\n\nimport Edge from './edge'\nimport LevelDbProperties from './leveldbprops'\n\nclass WGraph {\n\n\tconstructor(dbFolder) {\n\t\tthis.db = levelup(dbFolder)\n\t\tthis.graph = levelgraph(this.db)\n\t\tthis.properties = new LevelDbProperties(this.db)\n\t\tthis.graph.db = this.db\n\t\tthis.graph.properties = this.properties\n\t}\n\n\ttriplet(subject, predicate, object) {\n\t\treturn {\n\t\t\tsubject: subject || this.graph.v('subject'),\n\t\t\tpredicate: predicate || this.graph.v('predicate'),\n\t\t\tobject: object || this.graph.v('object')\n\t\t}\n\t}\n\n\ttriplets() { return this.graph.searchStream(this.triplet()) }\n\n\tedge(index) { return new Edge(this, index) }\n\n\tedges(indexes) { \n\t\tlet edges = {}\n\t\tfor (let i in arguments) \n\t\t\tedges[arguments[i]] = this.edge(arguments[i])\n\t\treturn edges\n\t}\n\n\t_fetch(fn) { return this.triplets().on('data', fn) }\n\n\tcount() {\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet nbTriplets = 0\n\t\t\tthis._fetch(() => nbTriplets++)\n\t\t\t\t.on('end', () => { resolve(nbTriplets) })\n\t\t\t\t.on('error', reject)\n\t\t})\n\t}\n\n\tclear() {\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet nbTriplets = 0\n\t\t\tthis._fetch(triplet => {\n\t\t\t\tthis.graph.del(triplet, err => {\n\t  \t\t\tif (err) return reject(err)\n\t  \t\t\tnbTriplets++\n\t  \t\t})\n\t\t\t}).on('end', () => { resolve(nbTriplets) })\n\t\t\t\t.on('error', reject)\n\t\t})\n\t}\n\n\tsearch() {\n\t\tvar args = arguments\n\t\tif (args.length === 1 && Array.isArray(args[0]))\n\t\t\treturn this.search.apply(this, args[0])\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet indexes = []\n\t\t\tfor (let i in args) indexes.push(args[i])\n\t\t\tlet search = this.triplet()\n\t\t\tsearch.filter = triplet => {\n\t\t\t\treturn indexes.indexOf(triplet.subject) > -1\n\t\t\t}\n\t\t\tthis.graph.search(search, (err, triplets) => {\n\t\t\t\tif (err) return reject(err)\n\t\t\t\tlet loadEdges = triplets.map(triplet => {\n\t\t\t\t\treturn new Edge(this, triplet.subject).load()\n\t\t\t\t})\n\t\t\t\trsvp.all(loadEdges).then(edges => {\n\t\t\t\t\tif (args.length === 1) return resolve(edges.shift())\n\t\t\t\t\tvar result = {}\n\t\t\t\t\tedges.forEach(edge => result[edge.index] = edge)\n\t\t\t\t\tresolve(result)\n\t\t\t\t}).catch(reject)\n\t\t\t})\n\t\t})\n\t}\n\n}\n\nexport default WGraph\n"]}