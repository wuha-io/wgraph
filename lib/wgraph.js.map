{"version":3,"sources":["../src/wgraph.js"],"names":[],"mappings":"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","file":"wgraph.js","sourcesContent":["\nimport util from 'util'\nimport levelup from 'levelup'\nimport levelgraph from 'levelgraph'\nimport rsvp from 'rsvp'\n\nimport Node from './node'\nimport LevelDbProperties from './leveldbprops'\n\nclass WGraph {\n\n\tconstructor(dbFolder) {\n\t\tthis.db = levelup(dbFolder)\n\t\tthis.graph = levelgraph(this.db)\n\t\tthis.properties = new LevelDbProperties(this.db)\n\t\tthis.graph.db = this.db\n\t\tthis.graph.properties = this.properties\n\t}\n\n\ttriplet(subject, predicate, object) {\n\t\treturn {\n\t\t\tsubject: subject || this.graph.v('subject'),\n\t\t\tpredicate: predicate || this.graph.v('predicate'),\n\t\t\tobject: object || this.graph.v('object')\n\t\t}\n\t}\n\n\ttriplets() { return this.graph.searchStream(this.triplet()) }\n\n\tnode(index, properties) { \n\t\tlet node = new Node(this, index)\n\t\tif (properties) node.props.set(properties)\n\t\treturn node\n\t}\n\n\tnodes() { \n\t\tlet nodes = {}\n\t\tfor (let i in arguments) \n\t\t\tnodes[arguments[i]] = this.node(arguments[i])\n\t\treturn nodes\n\t}\n\n\t_fetch(fn) { return this.triplets().on('data', fn) }\n\n\tcount() {\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet nbTriplets = 0\n\t\t\tthis._fetch(() => nbTriplets++)\n\t\t\t\t.on('end', () => { resolve(nbTriplets) })\n\t\t\t\t.on('error', reject)\n\t\t})\n\t}\n\n\tclear() {\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet nbTriplets = 0\n\t\t\tthis._fetch(triplet => {\n\t\t\t\tthis.graph.del(triplet, err => {\n\t  \t\t\tif (err) return reject(err)\n\t  \t\t\tnbTriplets++\n\t  \t\t})\n\t\t\t}).on('end', () => { resolve(nbTriplets) })\n\t\t\t\t.on('error', reject)\n\t\t})\n\t}\n\n\tsearch() {\n\t\tvar args = arguments\n\t\tif (args.length === 1 && Array.isArray(args[0]))\n\t\t\treturn this.search.apply(this, args[0])\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet indexes = []\n\t\t\tfor (let i in args) indexes.push(args[i])\n\t\t\tlet search = this.triplet()\n\t\t\tsearch.filter = triplet => {\n\t\t\t\treturn indexes.indexOf(triplet.subject) > -1\n\t\t\t}\n\t\t\tthis.graph.search(search, (err, triplets) => {\n\t\t\t\tif (err) return reject(err)\n\t\t\t\tlet loadNodes = triplets.map(triplet => {\n\t\t\t\t\treturn new Node(this, triplet.subject).load()\n\t\t\t\t})\n\t\t\t\trsvp.all(loadNodes).then(nodes => {\n\t\t\t\t\tif (args.length === 1) return resolve(nodes.shift())\n\t\t\t\t\tvar result = {}\n\t\t\t\t\tnodes.forEach(node => result[node.index] = node)\n\t\t\t\t\tresolve(result)\n\t\t\t\t}).catch(reject)\n\t\t\t})\n\t\t})\n\t}\n\n\texport() {\n\t\treturn new rsvp.Promise((resolve, reject) => {\n\t\t\tlet nodes = []\n\t\t\tlet edges = []\n\t\t\tthis._fetch(triplet => {\n\t\t\t\tnodes.push(triplet.subject)\n\t\t\t\tnodes.push(triplet.object)\n\t\t\t\tedges.push({\n\t\t\t\t\tsubject: triplet.subject, \n\t\t\t\t\tpredicate: triplet.predicate, \n\t\t\t\t\tobject: triplet.object\n\t\t\t\t})\n\t\t\t}).on('end', () => { \n\t\t\t\tnodes = nodes.filter((n, i, arr) => { return arr.indexOf(n) === i })\n\t\t\t\tlet nodeProps = nodes.map(node => {\n\t\t\t\t\tlet nodeNs = util.format('__props:node:%s', node)\n\t\t\t\t\treturn new LevelDbProperties(this.db).map(nodeNs)\n\t\t\t\t})\n\t\t\t\tlet edgeProps = edges.map(edge => {\n\t\t\t\t\tlet propsNs = util.format('__props:edge:%s:%s:%s', edge.subject, edge.predicate, edge.object)\n\t\t\t\t\treturn new LevelDbProperties(this.db).map(propsNs)\n\t\t\t\t})\n\t\t\t\tlet props = {nodes: [], edges: []}\n\t\t\t\trsvp.all(nodeProps).then(nodeMaps => {\n\t\t\t\t\tfor (let i in nodeMaps) props.nodes.push(nodeMaps[i])\n\t\t\t\t}).then(() => { return rsvp.all(edgeProps) })\n\t\t\t\t.then(edgeMaps => {\n\t\t\t\t\tfor (let i in edgeMaps) props.edges.push(edgeMaps[i])\n\t\t\t\t\tresolve({nodes: nodes, edges: edges, props: props})\n\t\t\t\t}).catch(reject)\n\t\t\t}).on('error', reject)\n\t\t})\n\t}\n\n}\n\nexport default WGraph\n"]}